{"version":3,"sources":["pages/Login.js","pages/PageNotFound.js","pages/admin/AnswerType.js","pages/admin/AnswerList.js","pages/admin/AddIndex.js","pages/admin/AddAnswer.js","utills/splite.js","pages/Search.js","pages/StartSearch.js","routers/index.js","layout/Frame.js","App.js","utills/auth.js","serviceWorker.js","index.js"],"names":["Footer","Layout","PageNotFound","to","AnswerType","onsubmit","Promise","resolve","reject","Axios","get","then","res","result","data","list","Object","values","mylist","forEach","element","push","name","setState","datalist","loading","onDelete","record","post","acknowledged","templist","Array","from","state","index","length","console","log","message","success","bind","colums","dataIndex","title","render","text","okText","cancelText","onConfirm","e","onCancel","info","type","danger","this","dataSource","columns","rowKey","Component","Option","Select","AnswerList","useState","setData","dataList","setDataList","useEffect","onClick","handleDel","temp","dianpu","id","tempList","filter","elemnet","label","rules","required","onChange","body","hits","temList","_id","_index","answer","_source","placeholder","map","item","key","value","htmlType","Date","now","AddIndex","onFinish","axios","error","allowClear","AddContent","handleFinish","showSearch","style","width","optionFilterProp","filterOption","input","option","children","toLowerCase","indexOf","React","str","a","url","method","params","tokens","splite","Search","props","useParams","resultArray","setResultArray","btnState","setbtnState","selectValue","setSelectValue","setValue","wordList","setWorldlist","createHashHistory","history","paste","navigator","clipboard","readText","useHotkeys","copy","className","TextArea","autoSize","minRows","maxRows","target","span","query","replace","analyzer","disabled","height","display","justifyContent","token","color","ellipsis","mark","strong","overflowWrap","StartSearch","onload","dianpuList","onRedirect","path","defaultActiveFirstOption","mainRouter","component","background","margin","textAlign","interceptors","response","use","status","username","password","localStorage","setItem","role","Item","prefix","UserOutlined","LockOutlined","icon","TeamOutlined","adminRouter","exact","DesktopOutlined","requireRole","PieChartOutlined","FileOutlined","AddAnswer","Header","Content","Sider","Frame","curRole","Number","getItem","minHeight","collapsible","position","right","top","clear","window","location","theme","defaultSelectedKeys","mode","route","padding","App","router","routerProps","Boolean","hostname","match","ReactDOM","routeProps","document","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.fa7a08cf.chunk.js","sourcesContent":["import React from \"react\";\nimport { Form, Input, Button, Card, message, Layout } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport { createHashHistory } from \"history\";\n\nconst { Footer } = Layout;\n\nexport default function Login(props) {\n  const onFinish = (values) => {\n    axios.interceptors.response.use(\n      (response) => {\n        return response;\n      },\n      (error) => {\n        if (error.response) {\n          switch (error.response.status) {\n            case 401:\n            // 返回 401 清除token信息并跳转到登录页面\n            //message.error(\"账号不存在\");\n          }\n        }\n        return Promise.resolve(error.response.status); // 返回接口返回的错误信息\n      }\n    );\n    axios\n      .post(`/login?username=${values.username}&password=${values.password}`)\n      .then((res) => {\n        console.log(\"#########res\", res);\n\n        if (res.status === 200) {\n          message.success(\"登录成功\");\n          createHashHistory().push(\"/admin\");\n          localStorage.setItem(\"user-role\", res.data.role);\n          console.log(res);\n        } else {\n          message.error(\"登录失败\");\n        }\n      });\n  };\n  return (\n    <Layout>\n      <Card\n        style={{\n          width: \"50vw\",\n          height: \"90vh\",\n          background: \"#CCFFFF\",\n          margin: \"0 auto\",\n        }}\n      >\n        <h1 style={{ textAlign: \"center\" }}>登录管理后台</h1>\n        <Form onFinish={onFinish}>\n          <Form.Item\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: \"输入用户名\",\n              },\n            ]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"用户名\"\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: \"务必输入密码\",\n              },\n            ]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              placeholder=\"密码\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              登录\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n      <Footer style={{ textAlign: \"center\" }}>\n        山东香柏网络科技 ©2020 Created by 开发部\n      </Footer>\n    </Layout>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Card } from \"antd\";\n\nfunction PageNotFound() {\n  return (\n    <div>\n      <Card>\n        <h1>抱歉啦兄弟，404了！</h1>\n        <h2>跳转首页吧</h2>\n        <div>\n          <NavLink to={\"404\"}>回首页面</NavLink>\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nexport default PageNotFound;\n","import React, { Component } from \"react\";\n\nimport { Table, Card, Button, message } from \"antd\";\nimport Axios from \"axios\";\n\nimport { Popconfirm } from \"antd\";\nexport class AnswerType extends Component {\n  constructor() {\n    super();\n    this.state = {\n      datalist: [],\n      loading: false,\n    };\n    this.onDelete = this.onDelete.bind(this);\n    this.onsubmit = this.onsubmit.bind(this);\n\n    this.colums = [\n      {\n        dataIndex: \"name\",\n        title: \"店铺名称\",\n      },\n      {\n        title: \"操作\",\n        dataIndex: \"action\",\n        render: (text, record) => {\n          return (\n            <Popconfirm\n              title=\"您确定要删除吗？此操作不可恢复\"\n              okText=\"确定\"\n              cancelText=\"取消\"\n              onConfirm={(e) => {\n                this.onDelete(record);\n              }}\n              onCancel={() => {\n                message.info(\"已取消\");\n              }}\n            >\n              <Button type={\"link\"} danger>\n                删除\n              </Button>\n            </Popconfirm>\n          );\n        },\n      },\n    ];\n  }\n\n  onsubmit = () => {\n    return new Promise((resolve, reject) => {\n      Axios.get(\"/api/indexlist\").then((res) => {\n        let result = res.data;\n        var list = Object.values(result);\n        let mylist = [];\n        list.forEach((element) => {\n          mylist.push({ name: element });\n        });\n        this.setState({\n          datalist: mylist,\n          loading: false,\n        });\n      });\n    });\n  };\n  onDelete = (record) => {\n    Axios.post(`/api/delindex?name=${record.name}`, record.name).then((res) => {\n      if (res.data.acknowledged) {\n        let templist = Array.from(this.state.datalist);\n\n        for (let index = 0; index < templist.length; index++) {\n          const element = templist[index];\n          if (element.name === record.name) {\n            console.log(templist[index].name);\n\n            delete templist[index];\n          }\n        }\n\n        this.setState({\n          datalist: templist,\n        });\n\n        message.success(\"删除成功\");\n      } else {\n        message.success(\"删除失败\");\n      }\n    });\n  };\n  componentDidMount() {\n    this.onsubmit();\n  }\n  render() {\n    return (\n      <div>\n        <Card>\n          <Table\n            dataSource={this.state.datalist}\n            columns={this.colums}\n            rowKey={\"name\"}\n            loading={this.state.loading}\n          ></Table>\n        </Card>\n      </div>\n    );\n  }\n}\n\nexport default AnswerType;\n","import React, { useState, useEffect } from \"react\";\nimport { Card, Table, Button, message } from \"antd\";\nimport Axios from \"axios\";\nimport Form from \"antd/lib/form/Form\";\nimport FormItem from \"antd/lib/form/FormItem\";\nimport { Select } from \"antd\";\n\nconst { Option } = Select;\n\nfunction AnswerList() {\n  const [data, setData] = useState([]);\n\n  const [dataList, setDataList] = useState([]);\n  useEffect(() => {\n    onsubmit();\n  }, []);\n  const colums = [\n    {\n      title: \"店铺名称\",\n      dataIndex: \"dianpu\",\n    },\n    {\n      title: \"短语\",\n      dataIndex: \"answer\",\n    },\n    {\n      title: \"操作\",\n      dataIndex: \"action\",\n      render: (text, record) => {\n        return (\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              handleDel(record);\n            }}\n          >\n            删除\n          </Button>\n        );\n      },\n    },\n  ];\n  const onsubmit = () => {\n    Axios.get(\"/api/indexlist\").then((res) => {\n      var temp = Object.values(res.data);\n      setDataList(temp);\n    });\n  };\n  const handleDel = (e) => {\n    Axios.post(\"/api/delanswer\", {\n      dianpu: e.dianpu,\n      id: e.id,\n    }).then((res) => {\n      let tempList = data.filter(function (elemnet) {\n        return elemnet.id !== e.id;\n      });\n      setData(tempList);\n      message.success(\"删除成功\");\n    });\n  };\n  const onChange = (e) => {\n    Axios.get(`/allanswer?dianpu=${`${e}`}`).then((res) => {\n      console.log(res.data);\n\n      let result = res.data.body.hits.hits;\n      let temList = [];\n\n      result.forEach((element) => {\n        temList.push({\n          id: element._id,\n          dianpu: element._index,\n          answer: element._source.answer,\n        });\n      });\n      setData(temList);\n    });\n  };\n\n  return (\n    <div>\n      <Card>\n        <Form>\n          <FormItem\n            label={\"请选择店铺\"}\n            name=\"dianpu\"\n            rules={[{ required: true, message: \"店铺名是必填的哦！\" }]}\n          >\n            <Select onChange={onChange} placeholder=\"请选择店铺\">\n              {dataList.map((item, index) => {\n                return (\n                  <Option key={index} value={item}>\n                    {item}\n                  </Option>\n                );\n              })}\n            </Select>\n          </FormItem>\n          <FormItem>\n            <Button type=\"primary\" htmlType=\"submit\">\n              提取\n            </Button>\n          </FormItem>\n        </Form>\n        <Table dataSource={data} columns={colums} rowKey={Date.now}></Table>\n      </Card>\n    </div>\n  );\n}\n\nexport default AnswerList;\n","import React from \"react\";\nimport { Button, Card, Form, Input, message } from \"antd\";\nimport FormItem from \"antd/lib/form/FormItem\";\nimport axios from \"axios\";\nfunction AddIndex() {\n  const hanldeFinish = (values) => {\n    axios.post(\"/adddianpu\", values).then((res) => {\n      console.log(res);\n\n      if (res.data === \"店铺已经存在\") {\n        message.error(\"店铺已经存在\");\n      }\n      if (res.data === \"添加成功\") {\n        message.success(\"添加成功\");\n      }\n      if (res.data === \"添加失败\") {\n        message.error(\"添加失败\");\n      }\n    });\n  };\n  return (\n    <Card>\n      <Form onFinish={hanldeFinish}>\n        <FormItem\n          label=\"店铺名称\"\n          name=\"dianpu\"\n          rules={[{ required: true, message: \"请输入店铺名称\" }]}\n        >\n          <Input allowClear></Input>\n        </FormItem>\n        <FormItem>\n          <Button type=\"primary\" htmlType=\"submit\">\n            保存\n          </Button>\n        </FormItem>\n      </Form>\n    </Card>\n  );\n}\nexport default AddIndex;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Form from \"antd/lib/form/Form\";\nimport FormItem from \"antd/lib/form/FormItem\";\nimport { Input, Button, Card, message } from \"antd\";\nimport { Select } from \"antd\";\n\nconst { Option } = Select;\n\nexport default class AddContent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      dataList: [],\n    };\n    this.handleFinish = this.handleFinish.bind(this);\n\n    this.onsubmit = this.onsubmit.bind(this);\n    this.tempList = [];\n  }\n  onsubmit = () => {\n    axios.get(\"/api/indexlist\").then((res) => {\n      var temp = Object.values(res.data);\n      this.setState({ dataList: temp });\n    });\n  };\n  handleFinish = (values) => {\n    console.log(values);\n    axios.post(\"/api/addanswer\", values).then((result) => {\n      if (result.data === \"店铺不存在\") {\n        message.error(\"店铺不存在\");\n      }\n      if (result.data === \"添加成功\") {\n        message.success(\"添加成功\");\n      }\n    });\n  };\n  componentDidMount() {\n    this.onsubmit();\n  }\n  render() {\n    return (\n      <Card title=\"添加答语\">\n        <Form onFinish={this.handleFinish}>\n          <FormItem\n            label=\"店铺\"\n            name=\"dianpu\"\n            rules={[\n              {\n                required: true,\n                message: \"店铺名字不能为空\",\n              },\n            ]}\n          >\n            <Select\n              showSearch\n              style={{ width: 200 }}\n              placeholder=\"选择一个店铺\"\n              optionFilterProp=\"children\"\n              filterOption={(input, option) =>\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              {this.state.dataList.map((item, index) => {\n                return (\n                  <Option value={item} key={item}>\n                    {item}\n                  </Option>\n                );\n              })}\n            </Select>\n          </FormItem>\n          <FormItem\n            label=\"回答\"\n            name=\"answer\"\n            rules={[\n              {\n                required: true,\n                message: \"回答项不能为空\",\n              },\n            ]}\n          >\n            <Input></Input>\n          </FormItem>\n          <Button type=\"primary\" htmlType=\"submit\">\n            提交\n          </Button>\n        </Form>\n      </Card>\n    );\n  }\n}\n","import axios from \"axios\";\n\nasync function splite(str) {\n  let list = [];\n  await axios({\n    url: \"/api/splite\",\n    method: \"get\",\n    params: {\n      dianpu: str.dianpu,\n      text: str.text,\n    },\n  }).then((res) => {\n    list = res.data.body.tokens\n  });\n  return list;\n}\n\nexport default splite;\n","import React, { useState, useEffect } from \"react\";\nimport \"./search.css\";\nimport copy from \"copy-to-clipboard\";\nimport splite from \"../utills/splite\";\nimport useHotkeys from \"@reecelucas/react-use-hotkeys\";\nimport { message, Input, Row, Col, Button } from \"antd\";\nimport Axios from \"axios\";\nimport { createHashHistory } from \"history\";\nimport Text from \"antd/lib/typography/Text\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function Search(props) {\n  let { id } = useParams();\n\n  const [resultArray, setResultArray] = useState([]);\n  const [btnState, setbtnState] = useState(false);\n  const [selectValue, setSelectValue] = useState(\"\");\n  const [value, setValue] = useState(\"\");\n  const [wordList, setWorldlist] = useState([\"分词结果\"]);\n  const handlePaste = () => {\n    paste().then((result) => {\n      setValue(result);\n    });\n  };\n  useEffect(() => {\n    console.log(\"###id:\", id);\n\n    if (typeof id == \"undefined\") {\n      //等于 undefined\n\n      console.log(\"您是直接通过/search进来的,即将为您跳转回start页面\");\n      createHashHistory().push(\"/start\");\n      //props.history.push(\"/#/start\");\n    } else {\n      console.log(\"###传过来的参数为；\", id);\n      setSelectValue(id);\n      console.log(\"###selectValue:\", selectValue);\n    }\n  }, [id, props.history, selectValue]);\n  const handleSearch = () => {\n    var query = value;\n    query = query.replace(/\\ +/g, \"\");\n    const words = splite({\n      dianpu: selectValue,\n      text: query,\n      analyzer: \"ik_smart\",\n    });\n    words.then((res) => {\n      setWorldlist(res);\n    });\n\n    Axios.get(`/api/search?dianpu=${selectValue}&querystr=${query}`).then(\n      (res) => {\n        if (res.data.length > 0) {\n          setResultArray(res.data);\n\n          setbtnState(false);\n          console.log(`服务器返回的结果数量：${res.data.length}`);\n        } else {\n          console.log(`数据库没有返回数据${res.data.length}`);\n        }\n      }\n    );\n  };\n  const paste = async () => {\n    let result = \"\";\n    await navigator.clipboard.readText().then((res) => {\n      result = res;\n    });\n    return result;\n  };\n\n  useHotkeys(\"1\", () => {\n    if (resultArray.length < 1) {\n      message.info(\"没有数据别按数字键\");\n      return;\n    }\n    copy(resultArray[0]._source.answer);\n    console.log(resultArray[0]._source.answer);\n    message.success(\"复制成功\");\n  });\n  useHotkeys(\"2\", () => {\n    if (resultArray.length < 2) {\n      message.info(\"没有数据别按数字键 \");\n      return;\n    }\n    copy(resultArray[1]._source.answer);\n    console.log(resultArray[0]);\n    message.success(\"复制成功\");\n  });\n  useHotkeys(\"3\", () => {\n    if (resultArray.length < 3) {\n      message.info(\"没有数据别按数字键 \");\n      return;\n    }\n    copy(resultArray[2]._source.answer);\n    console.log(resultArray[0]._source.answer);\n    message.success(\"复制成功\");\n  });\n  useHotkeys(\"4\", () => {\n    if (resultArray.length < 4) {\n      message.info(\"没有数据别按数字键 \");\n      return;\n    }\n    copy(resultArray[3]._source.answer);\n    console.log(resultArray[0]._source.answer);\n    message.success(\"复制成功\");\n  });\n  useHotkeys(\"5\", () => {\n    if (resultArray.length < 5) {\n      message.info(\"没有数据别按数字键 \");\n      return;\n    }\n    copy(resultArray[4]._source.answer);\n    console.log(resultArray[0]);\n    message.success(\"复制成功\");\n  });\n\n  return (\n    <div id=\"search\">\n      <div className=\"search-text\">\n        <Input.TextArea\n          value={value}\n          autoSize={{\n            minRows: 2,\n            maxRows: 2,\n          }}\n          onChange={(e) => {\n            setValue(e.target.value);\n          }}\n        ></Input.TextArea>\n      </div>\n\n      <Row>\n        <Col span={12}>\n          <Button type=\"primary\" onClick={handlePaste} className=\"btn\">\n            粘贴\n          </Button>\n        </Col>\n        <Col span={12}>\n          <Button\n            type=\"danger\"\n            onClick={handleSearch}\n            disabled={btnState}\n            className=\"btn\"\n          >\n            查找\n          </Button>\n        </Col>\n      </Row>\n      <Row\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-around\",\n        }}\n      >\n        <Col span={12}>\n          <Text>分解词：</Text>\n        </Col>\n        <Col span={12}>\n          {wordList.map((item, index) => {\n            return (\n              <span key={index} type=\"danger\">\n                {item.token}\n                <span style={{ color: \"red\" }}>>></span>\n              </span>\n            );\n          })}\n        </Col>\n      </Row>\n\n      {resultArray.map((item, index) => {\n        return (\n          <Row className=\"rongqi\" key={index}>\n            <Col span={5}>\n              <Text ellipsis={true} type=\"danger\" mark strong>\n                {index + 1}\n              </Text>\n            </Col>\n            <Col span={19}>\n              <Text\n                style={{\n                  overflowWrap: \" break-word\",\n                }}\n              >\n                {item._source.answer}\n              </Text>\n            </Col>\n          </Row>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport Axios from \"axios\";\nimport { Select, Button, Card } from \"antd\";\nimport Title from \"antd/lib/skeleton/Title\";\nimport { createHashHistory } from \"history\";\nimport Form from \"antd/lib/form/Form\";\nimport FormItem from \"antd/lib/form/FormItem\";\nconst { Option } = Select;\nexport default class StartSearch extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      dianpu: \"\",\n      dianpuList: [\"d\", \"4\", \"4\"],\n    };\n    this.onload = this.onload.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onRedirect = this.onRedirect.bind(this);\n  }\n  onload = () => {\n    Axios.get(\"/api/indexlist\").then((res) => {\n      var temp = Object.values(res.data);\n      this.setState({ dianpuList: temp });\n    });\n  };\n  onChange = (e) => {\n    this.setState({\n      dianpu: e,\n    });\n  };\n  componentDidMount() {\n    this.onload();\n  }\n  onRedirect = (values) => {\n    let path = values.path;\n    createHashHistory().push(`/search/${path}`);\n    //this.props.history.push(`/#/search/${path}`);\n  };\n  render() {\n    return (\n      <Card>\n        <Form onFinish={this.onRedirect}>\n          <Title>请选择您需要查询的店铺</Title>\n          <FormItem\n            name=\"path\"\n            label=\"请选择一个店铺\"\n            rules={[\n              {\n                required: true,\n                message: \"店铺名字不能为空\",\n              },\n            ]}\n          >\n            <Select\n              onChange={this.onChange}\n              defaultActiveFirstOption\n              showSearch\n              style={{ width: 200 }}\n              placeholder=\"选择一个店铺\"\n              optionFilterProp=\"children\"\n              filterOption={(input, option) =>\n                option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n              }\n            >\n              {this.state.dianpuList.map((item, index) => {\n                return (\n                  <Option value={item} key={item}>\n                    {item}\n                  </Option>\n                );\n              })}\n            </Select>\n          </FormItem>\n          <FormItem>\n            <Button type=\"primary\" htmlType=\"submit\">\n              前往\n            </Button>\n          </FormItem>\n        </Form>\n      </Card>\n    );\n  }\n}\n","import Login from \"../pages/Login\";\nimport PageNotFound from \"../pages/PageNotFound\";\nimport AnswerType from \"../pages/admin/AnswerType\";\nimport AnswerList from \"../pages/admin/AnswerList\";\nimport AddIndex from \"../pages/admin/AddIndex\";\n\n\nimport AddAnswer from \"../pages/admin/AddAnswer\";\nimport Search from \"../pages/Search\";\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n} from \"@ant-design/icons\";\n\n\nimport StartSearch from \"../pages/StartSearch\";\nexport const mainRouter = [\n  {\n    path: \"/login\",\n    component: Login,\n    icon: TeamOutlined,\n  },\n  {\n    path: \"/start\",\n    component: StartSearch,\n    icon: TeamOutlined,\n  },\n\n\n  {\n    path: \"/search/:id\",\n    component: Search,\n    //    exact: true,\n    icon: UserOutlined,\n  },\n  {\n    path: \"/search\",\n    component: Search,\n\n    icon: TeamOutlined,\n  },\n  {\n    path: \"/404\",\n    component: PageNotFound,\n    icon: UserOutlined,\n  },\n];\nexport const adminRouter = [\n  {\n    path: \"/admin/answer\",\n    title: \"短语列表\",\n    exact: true,\n    component: AnswerList,\n    icon: DesktopOutlined,\n    key: 1,\n    requireRole: 10,\n  },\n  {\n    title: \"店铺列表\",\n\n    path: \"/admin/answertype\",\n    exact: true,\n    component: AnswerType,\n    icon: PieChartOutlined,\n    key: 2,\n    requireRole: 10,\n  },\n  // {\n  //   title: \"控制中心\",\n  //   path: \"/admin/dashboard\",\n  //   component: Dashboard,\n  //   exact: true,\n  //   icon: FileOutlined,\n  //   key: 3,\n  //   requireRole: 10,\n  // },\n  {\n    title: \"新增店铺\",\n    path: \"/admin/add\",\n    component: AddIndex,\n    exact: true,\n    icon: FileOutlined,\n    key: 4,\n    requireRole: 10,\n  },\n\n  // {\n  //   title: \"用户管理\",\n  //   path: \"/admin/users\",\n  //   component: User,\n  //   exact: true,\n  //   icon: UserOutlined,\n  //   key: 6,\n  //   requireRole: 20,\n  // },\n  {\n    title: \"新增短语\",\n    path: \"/admin/addanwer\",\n    component: AddAnswer,\n    exact: true,\n    icon: UserOutlined,\n    key: 7,\n    requireRole: 10,\n  },\n];\n","import React from \"react\";\n\nimport { Layout, Menu, Breadcrumb, Button } from \"antd\";\n\nimport { adminRouter } from \"../routers/index\";\n\nimport MenuItem from \"antd/lib/menu/MenuItem\";\nimport { NavLink } from \"react-router-dom\";\nconst { Header, Content, Footer, Sider } = Layout;\n\nfunction Frame(props) {\n  const curRole = Number(localStorage.getItem(\"user-role\"));\n  console.log(curRole)\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Sider collapsible>\n        <div style={{ position: \"fixed\", right: \"50px\", top: \"20px\" }}>\n          <Button\n            type=\"danger\"\n            onClick={() => {\n              localStorage.clear();\n              window.location = \"/login\";\n            }}\n          >\n            退出登录\n          </Button>\n        </div>\n\n        <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n          {adminRouter.map((route) => {\n            if (curRole < route.requireRole) {\n              return null;\n            }\n            return (\n              <MenuItem key={route.key} onClick={(e) => {}}>\n                <NavLink to={route.path} exact={route.exact}>\n                  <route.icon></route.icon>\n                  <span>{route.title}</span>\n                </NavLink>\n              </MenuItem>\n            );\n          })}\n        </Menu>\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n        <Content style={{ margin: \"0 16px\" }}>\n          <Breadcrumb style={{ margin: \"16px 0\" }}></Breadcrumb>\n          <div\n            className=\"site-layout-background\"\n            style={{ padding: 24, minHeight: 360 }}\n          >\n            {props.children}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          山东香柏网络科技 ©2020 Created by 开发部\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default Frame;\n","import React from \"react\";\nimport { isLogin } from \"./utills/auth\";\nimport \"./App.css\";\nimport { adminRouter } from \"./routers/index\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Frame from \"./layout/Frame\";\nfunction App() {\n  if (isLogin()) {\n    return (\n      <Frame>\n        <Switch>\n          {adminRouter.map((router) => {\n            return (\n              <Route\n                key={router.path}\n                path={router.path}\n                exact={router.exact}\n                render={(routerProps) => {\n                  return (\n                    <router.component\n                      key={router.path}\n                      {...routerProps}\n                    ></router.component>\n                  );\n                }}\n              ></Route>\n            );\n          })}\n          <Redirect to={adminRouter[0].path} from=\"/admin\"></Redirect>\n          <Redirect to=\"/404\"></Redirect>\n        </Switch>\n      </Frame>\n    );\n  } else {\n    return <Redirect to=\"/login\"></Redirect>;\n  }\n}\n\nexport default App;\n","export function getToken() {\n  return localStorage.getItem(\"token\");\n}\n\nexport function setToken() {\n  return localStorage.setItem(\"token\");\n}\nexport function isLogin(user) {\n return !!localStorage.getItem('user-role');\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { mainRouter } from \"./routers/index\";\nimport \"antd/dist/antd.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route\n        path=\"/admin\"\n        render={(routeProps) => {\n          return <App {...routeProps}></App>;\n        }}\n      ></Route>\n      {mainRouter.map((route) => {\n        return <Route key={route.path} {...route}></Route>;\n      })}\n      <Redirect from=\"/\" to=\"/login\"></Redirect>\n\n      <Redirect to=\"/404\"></Redirect>\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}